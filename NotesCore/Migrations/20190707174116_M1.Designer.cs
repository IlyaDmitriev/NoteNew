// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotesCore.Models.Context;

namespace NotesCore.Migrations
{
    [DbContext(typeof(NotesContext))]
    [Migration("20190707174116_M1")]
    partial class M1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NotesCore.Models.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author")
                        .HasColumnName("Author")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Text")
                        .HasColumnName("Text")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("NotesCore.Models.Note", b =>
                {
                    b.OwnsOne("NotesCore.Models.LifeTimeNote", "LifeTime", b1 =>
                        {
                            b1.Property<Guid>("NoteId");

                            b1.Property<int>("Count")
                                .HasColumnName("Count")
                                .HasColumnType("int");

                            b1.Property<DateTime?>("DeletingDate")
                                .HasColumnName("DeletingDate");

                            b1.HasKey("NoteId");

                            b1.ToTable("Notes");

                            b1.HasOne("NotesCore.Models.Note")
                                .WithOne("LifeTime")
                                .HasForeignKey("NotesCore.Models.LifeTimeNote", "NoteId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
